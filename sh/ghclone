#!/usr/bin/env sh

###############################################################################
# Author	: Valerio Casalino
# Description	: Clone from github with no pain ðŸ˜Ž
###############################################################################

error() { printf "\033[31m%s\033[0m\\n" "$1"; exit 1; }

usage(){ 
  printf "Usage: %s [-h] [-t|-s] -u <username>\\n\\n" "$( basename $0 )"
  printf "        -h|--help      Print usage\\n"
  printf "        -t|--http      Clone with https (default)\\n"
  printf "        -s|--ssh       Clone with ssh\\n"
  printf "        -u|--username  Supply username\\n"
}

check(){ 
  command -v curl git jq >/dev/null || error "You'll curl, jq and git"
}

add_lines(){ printf "%s" "$1" | nl; }

while [ $# -ne 0 ]; do case "$1" in
  -h|--help)
    usage
    exit 0
    ;;
  -t|--http)
    [ -n $mode ] && error "Error in protocol"
    mode="http"
    shift
    ;;
  -s|--ssh)
    [ -n "$mode" ] && error "Error in protocol"
    mode="ssh"
    shift
    ;;
  -u|--username)
    [ -n "$user" ] && error "Username already defined"
    shift
    user="$1"
    shift
    ;;
  *)
    error "Unknown parameter $1"
    exit 1
    ;;
esac done

[ -z "$user" ] && error "No user specified"
mode=${mode:-http}

list=$( 
  curl -s "https://api.github.com/users/$user/repos" \
  | grep "clone_url\|description" \
  | tr -d "," 	| nl \
)

n=$( printf "%s" "$list" | wc -l )
newline=$( printf "\\n" )
i=1
k=0
collection=""

[ "$n" -eq 0 ] && error "User has no repos"

printf "%*s\\n" "40" | tr " " "="
while [ "$i" -le "$n" ]; do
	k=$(( k+1 ))
	desc=$( printf "%s" "$list" | sed -n "${i}p" | cut -d "\"" -f 4- | tr -d "\"" )
	i=$(( i+1 ))
	name=$( printf "%s" "$list" | sed -n "${i}p" | cut -d "\"" -f 4- | cut -d "/" -f 5 | cut -d "." -f 1 )
	i=$(( i+1 ))
	collection=$( printf "%s\\n%s~%s~%s" "$collection" "$k" "$name" "$desc" )
	printf "\e[0;31m%-2s - \e[0;32m%s\e[m: %s %s\\n" "$k" "$name" "$desc"
done
printf "%*s\\n" "40" | tr " " "="

printf "Choose the repo: "
read -r choice

[ $choice -eq $choice 2>/dev/null ] || error "Not a number"
{ [ "$choice" -lt 1 ] || [ "$choice" -gt "$k" ];} && error "Number not in range"

repo=$( printf "%s" "$collection" | grep "^$choice" | cut -d "~" -f 2 )
printf "%s\\nIs this your choice? [y/N] " "$repo"

read -r l
([ $l = "y" ] || [ $l = "Y" ]) 2>/dev/null || error "Abort"

[ "$mode" = "ssh" ]  && git clone "git@github.com:$user/$repo.git"
[ "$mode" = "http" ] && git clone "https://github.com/$user/$repo.git"
